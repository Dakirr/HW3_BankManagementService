services:
  api-service:
    build:
      context: ./api_service 
      dockerfile: Dockerfile
    container_name: api-container
    ports:
      - "8080:8080" 
    networks:
      - microservices-net

  broker-service:
    build:
      context: ./broker_service 
      dockerfile: Dockerfile
    container_name: broker-container
    ports:
      - "8083:8080" 
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - microservices-net

  orders-service:
    build:
      context: ./orders_service 
      dockerfile: Dockerfile
    container_name: orders-container
    ports:
      - "8081:8080" 
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - microservices-net
  
  payments-service:
    build:
      context: ./payments_service 
      dockerfile: Dockerfile
    container_name: payments-container
    ports:
      - "8082:8080" 
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - microservices-net
    

  postgres:
    image: postgres:13
    container_name: postgres-container
    environment:
      POSTGRES_DB: hometask
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Password
    ports:
      - "5433:5432"
    networks:
      - microservices-net
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d hometask"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:


networks:
  microservices-net:
    driver: bridge
